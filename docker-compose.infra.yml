services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"  # host access
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # two client listeners: host & docker-internal (for Kafka UI)
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,DOCKER://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 15s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"  # http://localhost:8085
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    depends_on:
      kafka:
        condition: service_started

  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=tx-cluster
      - CASSANDRA_DC=datacenter1            # matches Spring local-datacenter
      - CASSANDRA_NUM_TOKENS=128
    volumes:
      - cassandra-data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES' 127.0.0.1 9042 >/dev/null 2>&1 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 20
    restart: unless-stopped

  # One-shot init job: wait for Cassandra to accept CQL, then create & verify keyspace
  cql-init:
    image: cassandra:4.1
    container_name: cql-init
    depends_on:
      cassandra:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-lc"]
    command: |
      set -e
      echo "Waiting for Cassandra native transport..."
      until cqlsh cassandra 9042 -e "DESCRIBE KEYSPACES" >/dev/null 2>&1; do
        echo "  ...not ready yet, retrying in 5s"
        sleep 5
      done
      echo "Creating keyspace txks if missing..."
      cqlsh cassandra 9042 -e "CREATE KEYSPACE IF NOT EXISTS txks WITH replication = {'class':'SimpleStrategy','replication_factor':1};"
      echo "Verifying keyspace..."
      cqlsh cassandra 9042 -e "DESCRIBE KEYSPACE txks"
      echo "Keyspace txks is ready."
    restart: "no"

volumes:
  cassandra-data:
